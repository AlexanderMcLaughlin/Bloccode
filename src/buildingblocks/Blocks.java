/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package buildingblocks;

import java.awt.Point;

/**
 *
 * @author Alexander
 */
public class Blocks extends javax.swing.JFrame {

    Point blockPress = new Point();
    
    
    /**
     * Creates new form Blocks
     */
    public Blocks() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GUI");
        setMinimumSize(new java.awt.Dimension(800, 700));
        setName("mainFrame"); // NOI18N
        setSize(new java.awt.Dimension(100, 100));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Make New Block");
        jButton1.setActionCommand("makeBlock");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 70, 130, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        makeGenericBlock();
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * Generic function used for reseting the location of the mouse after releasing
     * a block
     */
    private void blockMouseReleased(java.awt.event.MouseEvent evt) {                                    
        // Not neccessary, but a little housekeeping never hurt anyone
        blockPress = null;
    }                                   

    /**
     * Generic function used for capturing a mouse's location when initially 
     * clicking a block
     */
    private void blockMousePressed(java.awt.event.MouseEvent evt) {                                   
        // Get the initial point the object was clicked at relative to the objects top left corner
        // Used for smooth dragging
        blockPress = evt.getPoint();
    }                                  

    /**
     * Generic function used for following the mouse movement and relocating
     * the block selected
     */
    private void blockMouseDragged(java.awt.event.MouseEvent evt) {                                   
        // Get the "Block" or JPanel clicked
        javax.swing.JPanel blockClicked = (javax.swing.JPanel) evt.getSource();

        // Find where it was clicked on screen
        Point objectClicked = evt.getLocationOnScreen();

        // Use this to keep the mouse where it was when the object was initially clicked
        // Makes for smooth dragging and a much nicer UI
        Point newPoint = new Point((int)(objectClicked.getX()-blockPress.getX()-15), (int)(objectClicked.getY()-blockPress.getY()-15));

        // Predefined values that can be changed depending on where the boundaries
        // should be. The magic number 15 is the error that the mouse allows for
        // an object to go off screen, this simply accounts for the error
        //int rightMostPoint = this.getWidth()-blockClicked.getWidth() - jPanel3.getWidth() -15;
        int rightMostPoint = this.getWidth();
        int leftMostPoint = 0;
        int topMostPoint = 0;
        int bottomMostPoint = this.getHeight()-blockClicked.getHeight();

        // Boundary checking
        if(newPoint.getX()<=leftMostPoint)
            newPoint.setLocation(leftMostPoint, newPoint.getY());
        if(newPoint.getX()>rightMostPoint)
            newPoint.setLocation(rightMostPoint, newPoint.getY());
        if(newPoint.getY()<=topMostPoint)
            newPoint.setLocation(newPoint.getX(), topMostPoint);
        if(newPoint.getY()>bottomMostPoint)
            newPoint.setLocation(newPoint.getX(), bottomMostPoint);

        blockClicked.setLocation(newPoint);
    }
    
    /**
     * Creates a generic block with a set color and location
     * 
     * TODO: Make different functions that create the different types of blocks
     */
    private void makeGenericBlock() {
        
        Block gen = new Block("generic");
        
        gen.setBackground(new java.awt.Color(255, 255, 0));
        gen.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                blockMouseDragged(evt);
            }
        });
        gen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                blockMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                blockMouseReleased(evt);
            }
        });
        getContentPane().add(gen, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 100));
        
        
        repaint();
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Blocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Blocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Blocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Blocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Blocks().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
